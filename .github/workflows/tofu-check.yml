name: OpenTofu Check
on: [push, pull_request]
permissions:
  pull-requests: write
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
env:
  TF_VAR_delegation_set_id: ${{ vars.DELEGATION_SET_ID }}
  TF_VAR_route53_zone: ${{ vars.ROUTE53_ZONE }}
  TF_VAR_aws_region: ${{ vars.AWS_REGION }}
jobs:
  tofu:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./infrastructure"
    steps:
    - uses: actions/checkout@v3
    - uses: 8BitJonny/gh-get-current-pr@3.0.0
      id: PR
    - uses: opentofu/setup-opentofu@v1
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::211125613635:role/gchamontuta-github #change to reflect your IAM role‚Äôs ARN
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: us-east-1
    - name: Sts GetCallerIdentity
      run: |
        aws sts get-caller-identity

    - name: OpenTofu fmt
      id: fmt
      run: tofu fmt -check -recursive
      continue-on-error: true

    - name: OpenTofu Init
      id: init
      run: tofu init

    - name: OpenTofu Validate
      id: validate
      run: tofu validate -no-color

    - name: OpenTofu Plan
      id: plan
      run: tofu plan -no-color
      continue-on-error: true

    - uses: actions/github-script@v6
      if: steps.PR.outputs.number != null
      env:
        PLAN: "tofu\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: ${{ steps.PR.outputs.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

